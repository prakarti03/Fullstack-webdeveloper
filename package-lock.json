{
  "name": "full stack WD",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {}
}
// app.get("/it'snotsummerwithoutyou",async(req,res)=>{
//     try{
//         const cont = await axios.get(api + "it's not summer without you");
//         res.render("summer2.ejs",{content:cont.data.docs[0].cover_i}); 
//     }catch(error){
//         console.log(error);
//     }
// });
// app.get("/thesummeriturnedpretty",async(req,res)=>{
//     try{
//         const cont = await axios.get(api + "the summer i turned pretty");
//         res.render("summer1.ejs",{content:cont.data.docs[0].cover_i}); 
//     }catch(error){
//         console.log(error);
//     }
// });
// app.get("/we'llalwayshavesummer",async(req,res)=>{
//     try{
//         const cont = await axios.get(api + "we'll always have summer");
//         res.render("summer3.ejs",{content:cont.data.docs[0].cover_i}); 
//     }catch(error){
//         console.log(error);
//     }
// });
// app.get("/halfgirlfriend",async(req,res)=>{
//     try{
//         const cont = await axios.get(api + "half girlfriend");
//         res.render("half.ejs",{content:cont.data.docs[0].cover_i}); 
//     }catch(error){
//         console.log(error);
//     }
// });
// app.get("/2states",async(req,res)=>{
//     try{
//         const cont = await axios.get(api + "2 States:The Story Of My Marriage");
//         res.render("2states.ejs",{content:cont.data.docs[0].cover_i}); 
//     }catch(error){
//         console.log(error);
//     }
// });
// app.get("/fivepointsomeone",async(req,res)=>{
//     try{
//         const cont = await axios.get(api + "Five Point Someone: What not to do at iit");
//         res.render("IIT.ejs",{content:cont.data.docs[0].cover_i}); 
//     }catch(error){
//         console.log(error);
//     }
// });
// app.get("/callingsehmat",async(req,res)=>{
//     try{
//         const cont = await axios.get(api + "CALLING SEHMAT ");
//         res.render("calling.ejs",{content:cont.data.docs[0].cover_i}); 
//     }catch(error){
//         console.log(error);
//     }
// });
// app.get("/mafiaqueenofmumbai",async(req,res)=>{
//     try{
//         const cont = await axios.get(api + "MAFIA QUEENS OF MUMBAI: STORIES OF WOMEN FROM THE GANGLANDS");
//         res.render("mafia.ejs",{content:cont.data.docs[0].cover_i}); 
//     }catch(error){
//         console.log(error);
//     }
// });
// app.get("/thedevotionofsuspectx",async(req,res)=>{
//     try{
//         const cont = await axios.get(api + "THE DEVOTION OF SUSPECT X");
//         res.render("devotion.ejs",{content:cont.data.docs[0].cover_i}); 
//     }catch(error){
//         console.log(error);
//     }
// });
// app.get("/edit",(req,res)=>{
//     res.render("edit.ejs");
// });
updated code

import express from "express";
import axios from "axios";
import pg from "pg";
import bodyParser from "body-parser";
import dotenv from "dotenv";

dotenv.config();

const app = express();
const port = 4000;
const api = "https://openlibrary.org/search.json?q=";

app.use(express.static("public"));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

const db = new pg.Client({
    user: process.env.DB_USER,
    host: process.env.DB_HOST,
    password: process.env.DB_PASSWORD,
    port: process.env.DB_PORT,
    database: process.env.DB_NAME,
});

// Connect to the database
async function connectDb() {
    try {
        await db.connect();
        console.log("Connected to the database.");
    } catch (error) {
        console.error("Database connection error:", error);
    }
}

async function imagefetch() {
    const coverUrls = [];
    try {
        const result = await db.query("SELECT name FROM favourite");
        const favorites = result.rows;

        for (const favorite of favorites) {
            const response = await axios.get(api + favorite.name);
            if (response.data.docs.length > 0) {
                const coverId = response.data.docs[0].cover_i;
                if (coverId) {
                    coverUrls.push(`https://covers.openlibrary.org/b/id/${coverId}-M.jpg`);
                }
            }
        }
        return coverUrls;
    } catch (error) {
        console.error("Error fetching images:", error);
        return [];
    }
}

app.get("/posts", async (req, res) => {
    try {
        const coverUrls = await imagefetch();
        const posts = await db.query("SELECT * FROM favourite");
        const result = posts.rows;

        res.json({ result, coverUrls });
    } catch (error) {
        console.error("Error in /posts:", error);
        res.status(500).json({ error: "Internal Server Error" });
    }
});

app.listen(port, async () => {
    await connectDb();
    console.log(`API is running at http://localhost:${port}`);
});

ejs file

<!-- <div class="first">
<div class="summer"><img class="summer" src ="https://covers.openlibrary.org/b/id/<%=content[0]%>-L.jpg" alt="its not summer without you"></div>
<h3><a href="/thesummeriturnedpretty">THE SUMMER I TURNED PRETTY - BY JENNY HAN</a></h3>
<p id="para"></p>
</div>
<div class="first">    
<div class="summer"><img class="summer" src ="https://covers.openlibrary.org/b/id/<%=content[1]%>-L.jpg" alt="its not summer without you"></div>
<h3><a href="/it'snotsummerwithoutyou">IT'S NOT SUMMER WITHOUT YOU - BY JENNY HAN</a></h3>
<p id="para"></p>
</div>
<div class="first">
<div class="summer"><img class="summer" src ="https://covers.openlibrary.org/b/id/<%=content[2]%>-L.jpg" alt="its not summer without you"></div>
<h3><a href="/we'llalwayshavesummer">WE'LL ALWAYS HAVE SUMMER - BY JENNY HAN</a></h3>
<p id="para"></p>
</div>
</div>
<div class="first">
<div class="summer"><img class="summer" src ="https://covers.openlibrary.org/b/id/<%=content[3]%>-L.jpg" alt="its not summer without you"></div>
<h3><a href="/halfgirlfriend">HALF GIRLFRIEND - BY CHETAN BHAGAT</a></h3>
<p id="para"></p>
</div>
<div class="first">
<div class="summer"><img class="summer" src ="https://covers.openlibrary.org/b/id/<%=content[4]%>-L.jpg" alt="its not summer without you"></div>
<h3><a href="/2states">2 STATES: THE STORY OF MY MARRIAGE - BY CHETAN BHAGAT</a></h3>
<p id="para"></p>
</div>
<div class="first">
<div class="summer"><img class="summer" src ="https://covers.openlibrary.org/b/id/<%=content[5]%>-L.jpg" alt="its not summer without you"></div>
<h3><a href="/fivepointsomeone">FIVE POINT SOMEONE: WHAT NOT TO DO AT IIT - BY CHETAN BHAGAT</a></h3>
<p id="para"></p>
</div>
<div class="first">
<div class="summer"><img class="summer" src ="https://covers.openlibrary.org/b/id/<%=content[6]%>-L.jpg" alt="its not summer without you"></div>
<h3><a href="/mafiaqueenofmumbai">MAFIA QUEENS OF MUMBAI: STORIES OF WOMEN FROM THE GANGLANDS - BY S. HUSSAIN ZAIDI</a></h3>
<p id="para"></p>
</div>
<div class="first">
<div class="summer"><img class="summer" src ="https://covers.openlibrary.org/b/id/<%=content[7]%>-L.jpg" alt="its not summer without you"></div>
<h3><a href="/callingsehmat">CALLING SEHMAT - BY HARINDER SIKKA</a></h3>
<p id="para"></p>
</div>
<div class="first">
<div class="summer"><img class="summer" src ="https://covers.openlibrary.org/b/id/<%=content[8]%>-L.jpg" alt="its not summer without you"></div>
<h3><a href="/thedevotionofsuspectx">THE DEVOTION OF SUSPECT X - BY KEIGO HIGASHINO</a></h3>
<p id="para"></p>
</div> -->